<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        HRcAAAAASUVORK5CYII=
</value>
  </data>
</root>